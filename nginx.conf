worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Enable caching with a larger zone and a larger cache size
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:100m max_size=1g inactive=7d use_temp_path=off;

    server {
        listen 80;
        server_name localhost;

        # Location to serve images
        location /uploads/ {
            # Proxy the requests to your backend running in the "food-api-app" container
            proxy_pass http://backend_app:5000;  # Ensure this matches the container name

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Enable caching for the images
            proxy_cache my_cache;
            proxy_cache_key "$host$request_uri";  # Unique cache key based on the URL
            proxy_cache_valid 200 1d;  # Cache 200 responses for 1 day
            proxy_cache_use_stale error timeout updating;  # Serve stale content in case of errors or timeouts
            add_header X-Cache-Status $upstream_cache_status;  # Track cache status

            # Set cache headers for caching static assets in the browser
            add_header Cache-Control "public, max-age=31536000";  # Cache for 1 year

            # If a redirect is returned from the backend, we need to handle it
            proxy_redirect off;

            # Optional: Enable conditional bypass of cache (e.g., for specific query params)
            proxy_cache_bypass $arg_nocache;  # This will bypass cache when `nocache` is passed as a query parameter
        }
    }
}
